plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // Ensure Google services plugin is applied
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

android {
    namespace "com.nable.nable_ess"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    lintOptions {
          disable 'Deprecation', 'Unchecked'
        warningsAsErrors true
        lintConfig rootProject.file("lint.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.nable.nable_ess"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Signing with debug keys for now; replace with release config as needed
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so" // Add if targeting x86_64 architectures
    }
    lintOptions {
        disable 'Deprecation'    // Suppresses deprecated API warnings
        disable 'Unchecked'      // Suppresses unchecked warnings
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // Add any additional dependencies here, e.g., Firebase SDKs if used
}
